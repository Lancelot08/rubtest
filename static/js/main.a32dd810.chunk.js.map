{"version":3,"sources":["contracts/RubberDuckz.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","redux/data/merkleProof.js","components/callConnect.js","components/header.js","components/callToAction.js","App.js","components/fonts.js","components/theme.js","serviceWorker.js","index.js"],"names":["abi","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","weth","name","totalSupply","cost","error","ownNfts","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","walletOfOwner","console","log","connectFailed","updateAccount","getProof","address","hexAddress","keccak256","leafNodes","map","addr","merkleTree","MerkleTree","sortPairs","rootHash","getHexRoot","hexProof","getHexProof","Sj","props","bg","useColorModeValue","p","w","alignItems","justifyContent","maxW","md","lg","mx","py","base","px","display","h2","fontSize","sm","fontWeight","letterSpacing","lineHeight","color","span","mainText","h6","verticalAlign","littleText","button","onClick","border","textTransform","fontFamily","rounded","borderRadius","shadow","_hover","width","HeadOne","spacing","align","h1","textAlign","xl","href","direction","mt","pr","mb","CTA","MintSection","useState","contatore","setContatore","e","preventDefault","handleClick","zIndex","App","useDispatch","useSelector","feedback","setFeedback","setClaimingNft","useDisclosure","isOpen","onOpen","onClose","document","body","style","textInput","refValue","React","createRef","getData","useEffect","ai","detectEthereumProvider","provider","request","method","params","chainId","code","rpcUrl","Web3EthContract","setProvider","Web3","accounts","SmartContractObj","on","window","location","reload","referral","_amount","proof","Array","isArray","length","mint","send","to","from","value","utils","toWei","toString","once","err","then","receipt","claimNFTs","closeOnOverlayClick","isCentered","size","motionPreset","justify","wrap","minH","boxSize","objectFit","src","Fonts","styles","theme","extendTheme","fonts","Boolean","hostname","match","ReactDOM","render","initialColorMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a32dd810.chunk.js","sourcesContent":["const abi = [{\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_initBaseURI\",\n        \"type\": \"string\"\n    }, {\n        \"internalType\": \"string\",\n        \"name\": \"_initNotRevealedUri\",\n        \"type\": \"string\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"teamReserved\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"approved\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"approve\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_mintAmount\",\n        \"type\": \"uint256\"\n    }, {\n        \"internalType\": \"bytes32[]\",\n        \"name\": \"_merkleproof\",\n        \"type\": \"bytes32[]\"\n    }],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_mintAmount\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"ownerMint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"_state\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"pause\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"reveal\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }, {\n        \"internalType\": \"bytes\",\n        \"name\": \"_data\",\n        \"type\": \"bytes\"\n    }],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_newBaseExtension\",\n        \"type\": \"string\"\n    }],\n    \"name\": \"setBaseExtension\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_newBaseURI\",\n        \"type\": \"string\"\n    }],\n    \"name\": \"setBaseURI\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_newCost\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"setCost\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_newmaxMintAmount\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"setmaxMintAmountPlusOne\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_maxSupply\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"setMaxSupply\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"bytes32\",\n        \"name\": \"_merkleroot\",\n        \"type\": \"bytes32\"\n    }],\n    \"name\": \"setMerkleRoot\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"_limit\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"setNftPerAddressLimitPlusOne\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"_notRevealedURI\",\n        \"type\": \"string\"\n    }],\n    \"name\": \"setNotRevealedURI\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"_state\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"setOnlyWhitelisted\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"transferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"addressMintedBalance\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"baseExtension\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"baseURI\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"cost\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"getApproved\",\n    \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n    }, {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"maxMintAmountPlusOne\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"maxSupplyPlusOne\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"merkleroot\",\n    \"outputs\": [{\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"nftPerAddressLimitPlusOne\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"notRevealedUri\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"onlyWhitelisted\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"ownerOf\",\n    \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"paused\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"revealed\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n    }],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"tokenURI\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"_owner\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"walletOfOwner\",\n    \"outputs\": [{\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"whitelisted\",\n    \"outputs\": [{\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}];\nexport default abi;","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n          account: action.payload.account,\n          smartContract: action.payload.smartContract,\n          weth: action.payload.weth,\n          web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n          errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n  ownNfts: []\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n          error: false,\n          errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n          name: action.payload.name,\n          totalSupply: action.payload.totalSupply,\n          cost: action.payload.cost,\n          ownNfts: action.payload.ownNfts,\n          error: false,\n          errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n          error: true,\n          errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n      let ownNfts = await store\n        .getState()\n        .blockchain.smartContract.methods.walletOfOwner(account)\n        .call();\n      //await ownNfts.map(getJsonForId);\n      //alert(ownNfts[0]);\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          cost,\n          ownNfts\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport abi from \"../../contracts/RubberDuckz\";\nimport detectEthereumProvider from '@metamask/detect-provider'\n// log\nimport {\n  fetchData\n} from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const provider = await detectEthereumProvider();\n    if (provider) {\n\n      console.log('Ethereum successfully detected!')\n\n      // From now on, this should always be true:\n      // provider === window.ethereum\n\n      // Access the decentralized web!\n\n      // Legacy providers may only have ethereum.sendAsync\n      // Check if MetaMask is installed\n      // MetaMask injects the global API into window.ethereum\n\n      try {\n        // check if the chain to connect to is installed\n        await provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{\n            chainId: '0x13881'\n          }], // chainId must be in hexadecimal numbers\n        });\n      } catch (error) {\n        // This error code indicates that the chain has not been added to MetaMask\n        // if it is not, then install it into the user MetaMask\n        //https://rpc-mumbai.matic.today\n        if (error.code === 4902) {\n          try {\n            await provider.request({\n              method: 'wallet_addEthereumChain',\n              params: [{\n                chainId: '0x13881',\n                rpcUrl: 'https://rpc-mumbai.maticvigil.com/',\n              }, ],\n            });\n          } catch (addError) {\n            console.error(addError);\n          }\n        }\n        console.error(error);\n      }\n      Web3EthContract.setProvider(provider);\n      let web3 = new Web3(provider);\n      try {\n        const accounts = await provider.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = 5777; //1337; //await provider.request({ method: \"net_version\", });\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (1 == 1) {\n\n          const SmartContractObj = new Web3EthContract(\n            abi, \"0x4B2467B2C993bAc0f18A7ef2a54c0c8437A61Aa6\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          provider.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          provider.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Ethereum\"));\n        }\n      } catch (err) {\n        console.log(err)\n        dispatch(connectFailed(\"Something went wrong\"));\n      }\n    } else {\n\n      // if the provider is not detected, detectEthereumProvider resolves to null\n      console.error('Please install MetaMask!')\n    }\n\n    await provider.request({\n      method: \"eth_requestAccounts\",\n    });\n\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({\n      account: account\n    }));\n    dispatch(fetchData(account));\n  };\n};","import keccak256 from \"keccak256\";\nimport MerkleTree from \"merkletreejs\";\n\nconst getProof = (address) => {\n\n    const addresses = [\n        \"0xF7FF641b7840e7B74c858fbc9b1795d3f2a33bD9\",\n        \"0x680E91F1181B07d9935FCf45419dfdD5265CC11B\",\n        \"0x5E36f5f04cCeE8a5736D9411061349f36067BbBD\",\n        \"0x2C512EEA0aC7b174e2b9e1F6a447b537d0D89e86\",\n        \"0x2B368de91937CEafbe9d8e96fe9156054DCA7EF2\",\n        \"0x000000000000000000000000000000000000dEaD\",\n    ]\n    const invalidAddresses = [\n        \"0x8B3bb8347da9eB3eB5fB12FB400298245695159b\",\n        \"0x1dD8E903CC9Dae9FBEC7F7b4213992B2F5deC395\",\n\n    ]\n    const hexAddress = keccak256(address);\n\n    const leafNodes = addresses.map((addr) => keccak256(addr));\n    const merkleTree = new MerkleTree(leafNodes, keccak256, {\n        sortPairs: true,\n    });\n\n    const rootHash = merkleTree.getHexRoot();\n    console.log(\"Hash Root:\", rootHash);\n\n    const hexProof = merkleTree.getHexProof(hexAddress);\n    console.log(\"Valid address proff\", hexProof);\n    return hexProof;\n}\n\nexport default getProof;","import React from \"react\";\nimport {\n    chakra,\n    Box,\n    Flex,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\n\nexport default function Sj(props) {\n    return (\n        <Flex\n            bg={useColorModeValue(\"#F5C141\", \"gray.600\")}\n            p={50}\n            w=\"full\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n        >\n            <Box bg={useColorModeValue(\"#F5C141\", \"gray.800\")}>\n                <Box\n                    maxW=\"7xl\"\n                    w={{ md: \"3xl\", lg: \"4xl\" }}\n                    mx=\"auto\"\n                    py={{ base: 12, lg: 16 }}\n                    px={{ base: 4, lg: 8 }}\n                    display={{ lg: \"flex\" }}\n                    alignItems={{ lg: \"center\" }}\n                    justifyContent={{ lg: \"center\" }}\n                >\n                    <chakra.h2\n                        fontSize={{ base: \"3xl\", sm: \"4xl\" }}\n                        fontWeight=\"extrabold\"\n                        letterSpacing=\"tight\"\n                        lineHeight=\"shorter\"\n                        color={useColorModeValue(\"gray.900\", \"gray.100\")}\n                    >\n                        <chakra.span display=\"block\">{props.mainText}</chakra.span>\n\n                    </chakra.h2>\n                    <chakra.p>\n                        <sub>\n                            <chakra.h6 verticalAlign=\"true\">\n                                <chakra.span\n                                    display=\"block\"\n                                    color={useColorModeValue(\"brand.600\", \"gray.500\")}\n                                >\n                                    {props.littleText}\n                                </chakra.span>\n                            </chakra.h6>\n                        </sub>\n\n                    </chakra.p>\n                    <chakra.p>\n                        <chakra.button\n                            onClick={props.onClick}\n                            w={[\"full\", , \"auto\"]}\n                            display=\"inline-flex\"\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                            px={5}\n                            py={3}\n                            border=\"solid transparent\"\n                            fontSize=\"6xl\"\n                            textTransform=\"uppercase\"\n                            fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                            rounded=\"lg\"\n                            borderRadius=\"lg\"\n                            shadow=\"md\"\n                            color=\"white\"\n                            bg=\"#8f0100\"\n                            _hover={{\n                                bg: \"brand.50\",\n                            }}\n                        >\n                            <chakra.span width=\"180px\">CONNECT</chakra.span>\n                        </chakra.button>\n\n                    </chakra.p>\n\n                    {/* </Stack> */}\n                </Box>\n            </Box>\n        </Flex>\n    );\n}","import React from \"react\";\nimport {\n    chakra,\n    Box,\n    useColorModeValue,\n    Stack,\n    Flex,\n    Link,\n} from \"@chakra-ui/react\";\n\nconst HeadOne = () => {\n    return (\n        <Box bg=\"#F5C141\">\n            <Stack spacing={0} align={\"center\"}>\n                {/*  */}\n                <chakra.h1\n                    fontSize=\"6xl\"\n                    letterSpacing=\"tight\"\n                    lineHeight=\"short\"\n                    fontWeight=\"extrabold\"\n                    color=\"white\"\n                    textTransform=\"uppercase\"\n                    fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                    textAlign={['left']}\n                >\n                    <chakra.span display={{ base: \"block\", xl: \"inline\" }}>\n                        <Link href='https://www.rubberduckz.com/'>\n                            RUBBER DUCKZ\n                        </Link>\n\n                    </chakra.span>\n\n                </chakra.h1>\n                <Flex\n                    direction=\"column\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n\n                >\n                    <chakra.h1\n                        color=\"white\"\n                        fontSize=\"6xl\"\n                        textTransform=\"uppercase\"\n                        fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                        letterSpacing=\"wide\"\n                        textAlign={['right']}\n                    >\n                        WELCOME TO\n                    </chakra.h1>\n                    <chakra.span\n                        color=\"#8f0100\"\n                        fontSize=\"6xl\"\n                        textTransform=\"uppercase\"\n                        fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                        letterSpacing=\"wide\"\n                        mt={-14}\n                        textAlign={['right']}\n                    >\n                        THE FLOCK\n                    </chakra.span>\n                    <chakra.p\n                        pr={{ base: 0, lg: 16 }}\n                        mb={4}\n                        fontSize=\"lg\"\n                        color=\"#8f0100\"\n                        fontFamily='lulo-clean-w01-one-bold'\n                        letterSpacing=\"wider\"\n                    >\n                        PLEASE MINT YOUR\n                        RUBBER DUCKZ\n                    </chakra.p>\n\n\n                </Flex>\n\n            </Stack>\n        </Box>\n    );\n};\n\nexport default HeadOne;","import React, { useState } from \"react\";\nimport {\n    chakra,\n    Box,\n    useColorModeValue,\n    Flex,\n    Stack,\n    HStack,\n    VStack\n} from \"@chakra-ui/react\";\n\n\n\nconst CTA = (props) => {\n\n    const MintSection = (props) => {\n\n        const [contatore, setContatore] = useState(2);\n        return (<VStack>\n            <HStack maxW='180px' >\n                <chakra.span color=\"#8f0100\"\n                    fontSize=\"6xl\"\n                    textTransform=\"uppercase\"\n                    fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                    letterSpacing=\"wide\" onClick={() => {\n\n                        setContatore(1);\n                    }}>-</chakra.span>\n                <chakra.span color=\"#8f0100\"\n                    fontSize=\"6xl\"\n                    textTransform=\"uppercase\"\n                    fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                    letterSpacing=\"wide\" textAlign={['right']}\n                >{contatore}</chakra.span>\n                <chakra.span color=\"#8f0100\"\n                    fontSize=\"6xl\"\n                    textTransform=\"uppercase\"\n                    fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                    letterSpacing=\"wide\" onClick={() => {\n\n                        setContatore(2);\n                    }}>+</chakra.span>\n            </HStack>\n            <Box display=\"inline-flex\" rounded=\"md\" shadow=\"md\" borderRadius=\"full\">\n                <chakra.a\n                    onClick={(e) => {\n                        e.preventDefault();\n                        props.handleClick(contatore);\n                    }}\n                    mt={2}\n                    py={8}\n                    display=\"inline-flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    textTransform=\"uppercase\"\n                    fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                    fontSize=\"4xl\"\n                    px={5}\n                    py={3}\n                    border=\"solid transparent\"\n                    fontWeight=\"bold\"\n                    w=\"full\"\n                    rounded=\"lg\"\n                    borderRadius=\"full\"\n                    color={useColorModeValue(\"white\")}\n                    bg=\"#8f0100\"\n                >\n                    <chakra.span width=\"180px\">MINT</chakra.span>\n\n                </chakra.a>\n            </Box>\n        </VStack>\n        )\n\n    }\n\n\n    return (\n        <Stack spacing={0} align={\"center\"}>\n\n            <Flex\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                zIndex={3}\n            >\n                <Box display=\"inline-flex\">\n                    <MintSection handleClick={props.handleClick} />\n\n                </Box>\n            </Flex>\n\n        </Stack>\n    );\n};\n\nexport default CTA;","import React, {\n  useEffect,\n  useState\n} from \"react\";\nimport {\n  useDispatch,\n  useSelector\n} from \"react-redux\";\nimport {\n  connect\n} from \"./redux/blockchain/blockchainActions\";\nimport {\n  fetchData\n} from \"./redux/data/dataActions\";\nimport getProof from \"./redux/data/merkleProof\";\nimport {\n  chakra,\n  Box,\n  VStack,\n  Center,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  useDisclosure,\n  Flex,\n  Image\n} from '@chakra-ui/react';\nimport Sj from \"./components/callConnect\";\nimport HeadOne from \"./components/header\";\n\nimport CTA from \"./components/callToAction\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  //const nftAmount = useSelector((state) => state.nftAmount);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure()\n  document.body.style = 'background: #F5C141;';\n  let textInput = null;\n  const refValue = React.createRef();\n\n  const setTextInputRef = (element) => {\n    textInput = element;\n  };\n\n\n\n  const claimNFTs = (_amount) => {\n    //alert(_amount);\n\n    console.log(textInput);\n\n    setClaimingNft(true);\n    const proof = getProof(blockchain.account);\n    //alert(proof);\n    if (Array.isArray(proof) && proof.length) {\n      //alert(\"Proof is Right\")\n      blockchain.smartContract.methods\n        .mint(_amount, proof)\n        .send({\n\n          to: \"0x4B2467B2C993bAc0f18A7ef2a54c0c8437A61Aa6\",\n          from: blockchain.account,\n          value: blockchain.web3.utils.toWei((0.01 * _amount).toString(), \"ether\"),\n        })\n        .once(\"error\", (err) => {\n          onClose();\n          console.log(err);\n          setFeedback(\"It seems the transaction was cancelled.\");\n          setClaimingNft(false);\n\n        })\n        .then((receipt) => {\n          onClose();\n          setFeedback(\n            \"Quack Quack! You just minted \" + _amount + \" Rubber Duckz! Visit Opensea.io to view your randomly generated NFT!\"\n          );\n          setClaimingNft(false);\n          dispatch(fetchData(blockchain.account));\n        });\n    } else {\n      setFeedback(\" You are not in the whitelist!!\");\n      onClose()\n      setClaimingNft(false);\n    }\n\n\n  };\n\n\n  const getEstimateGas = async (_amount) => {\n\n    const lastBlock = await blockchain.web3.eth.getBlock(\"latest\");\n    console.log(lastBlock);\n    if (_amount <= 0) {\n      return;\n    }\n    setFeedback(\"Preparing your NFT(s)...\");\n    setClaimingNft(true);\n    //        to: \"0xc5ba70371Db9E571673C93258b3528800Be76dED\",\n    var quanti = 0\n    if (_amount == 10) {\n      quanti = 9;\n    } else {\n      quanti = _amount;\n    }\n    const gasLimit = 160000 * _amount;\n    const tx = blockchain.smartContract.methods.mint(blockchain.account, 1);\n\n    try {\n      const gasCost = await tx.estimateGas({ from: blockchain.account });\n      alert(gasCost);\n      const gasPrice = await blockchain.web3.eth.getGasPrice();\n      alert(gasPrice);\n      const data = tx.encodeABI();\n      const txData = {\n        from: blockchain.account,\n        data,\n        gas: gasCost,\n        gasPrice\n      };\n      console.log(txData);\n\n\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n\n    <Box textAlign=\"center\"\n      fontSize=\"xl\"\n      bg=\"#F5C141\" >\n      <  HeadOne />\n      {\n        blockchain.account === \"\" ||\n          blockchain.smartContract === null ? (<  VStack spacing={\n            2\n          }\n            ai={\n              \"center\"\n            } >\n            <  Sj mainText=\"\"\n\n              onClick={\n                (e) => {\n                  e.preventDefault();\n                  dispatch(connect());\n                  getData();\n                }\n              }\n            /> </VStack >\n\n\n        ) : (\n          <VStack spacing={\n            4\n          }>\n\n\n            <CTA referral={refValue} handleClick={\n              (contatore) => {\n                onOpen()\n                claimNFTs(contatore);\n                getData();\n              }\n            } />\n            <Flex direction=\"column\"\n              alignItems=\"center\"\n              justifyContent=\"center\">\n              <chakra.p\n                pr={{ base: 0, lg: 16 }}\n                mb={4}\n                fontSize=\"4xl\"\n                color=\"#8f0100\"\n                fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                letterSpacing=\"wider\"\n                textTransform=\"uppercase\"\n              >{data.totalSupply}/2000</chakra.p>\n              <chakra.p\n                pr={{ base: 0, lg: 16 }}\n                mb={4}\n                fontSize=\"md\"\n                color=\"#8f0100\"\n                fontFamily='lulo-clean-w01-one-bold'\n                letterSpacing=\"wider\"\n                textTransform=\"uppercase\"\n              >{feedback}</chakra.p>\n\n            </Flex>\n\n\n\n\n            <Modal closeOnOverlayClick={false}\n              isOpen={\n                isOpen\n              }\n              onClose={\n                onClose\n              }\n              isCentered size=\"xl\" motionPreset='slideInBottom' >\n              <ModalOverlay />\n              <ModalContent bg=\"#8f0100\" >\n\n                <ModalBody borderRadius='lg'>\n                  <Center bg=\"#8f0100\">\n                    <Flex\n                      align=\"center\"\n                      justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\n                      direction={{ base: \"column-reverse\", md: \"row\" }}\n                      wrap=\"no-wrap\"\n                      minH=\"70vh\"\n                      px={8}\n                      mb={16}\n                    >\n                      <VStack >\n                        <Image boxSize='300px'\n                          objectFit='cover' borderRadius='15px' src=\"https://static.wixstatic.com/media/485d82_3d2a9c62bc6e43c7bc953bec8380439b~mv2.png\"></Image>\n                        <chakra.span fontSize=\"3xl\"\n                          textTransform=\"uppercase\"\n                          fontFamily='wf_e4b1e1e4405343d9ad0296011'\n                          letterSpacing=\"wide\" color=\"white\"> MINT IN PROGRESS </chakra.span>\n                      </VStack>\n\n\n                    </Flex>\n\n                  </Center>\n\n                </ModalBody> </ModalContent >\n            </Modal>\n\n\n          </VStack>\n        )\n      } </Box >\n  );\n}\n\nexport default App;","import * as React from 'react'\nimport { Global } from '@emotion/react'\n\nconst Fonts = () => (\n  <Global\n    styles={`\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W01-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/f70da45a-a05c-490c-ad62-7db4894b012a.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/f70da45a-a05c-490c-ad62-7db4894b012a.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/c5749443-93da-4592-b794-42f28d62ef72.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/73805f15-38e4-4fb7-8a08-d56bf29b483b.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/874bbc4a-0091-49f0-93ef-ea4e69c3cc7a.svg#874bbc4a-0091-49f0-93ef-ea4e69c3cc7a\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W02-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/8c0d8b0f-d7d6-4a72-a418-c2373e4cbf27.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/8c0d8b0f-d7d6-4a72-a418-c2373e4cbf27.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/192dac76-a6d9-413d-bb74-22308f2e0cc5.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/47584448-98c4-436c-89b9-8d6fbeb2a776.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/375c70e5-6822-492b-8408-7cd350440af7.svg#375c70e5-6822-492b-8408-7cd350440af7\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-LT-W10-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9fe262dc-5a55-4d75-91a4-aed76bd32190.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9fe262dc-5a55-4d75-91a4-aed76bd32190.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0a3939d0-3833-4db3-8b85-f64c2b3350d2.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/1b128d6d-126f-4c9c-8f87-3e7d30a1671c.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/b791c850-fde1-48b3-adf0-8998d55b0866.svg#b791c850-fde1-48b3-adf0-8998d55b0866\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W01-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3e0b2cd7-9657-438b-b4af-e04122e8f1f7.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3e0b2cd7-9657-438b-b4af-e04122e8f1f7.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/bc176270-17fa-4c78-a343-9fe52824e501.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3516f91d-ac48-42cd-acfe-1be691152cc4.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/d1b1e866-a411-42ba-8f75-72bf28e23694.svg#d1b1e866-a411-42ba-8f75-72bf28e23694\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W02-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/48e5a0e1-2d56-46e5-8fc4-3d6d5c973cbf.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/48e5a0e1-2d56-46e5-8fc4-3d6d5c973cbf.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/07d62b21-8d7a-4c36-be86-d32ab1089972.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/c0050890-bbed-44b9-94df-2611d72dbb06.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9f774d17-c03a-418e-a375-34f3beecbc7a.svg#9f774d17-c03a-418e-a375-34f3beecbc7a\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W10-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3d009cd7-c8fe-40c0-93da-74f4ea8c530b.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3d009cd7-c8fe-40c0-93da-74f4ea8c530b.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/a9e95a29-98a7-404a-90ee-1929ad09c696.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0a7663fd-eae8-4e50-a67a-225271f8cceb.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/58ae9be9-5d95-44b6-8b6c-e6da6a46822c.svg#58ae9be9-5d95-44b6-8b6c-e6da6a46822c\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W01-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/ea95b44a-eab7-4bd1-861c-e73535e7f652.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/ea95b44a-eab7-4bd1-861c-e73535e7f652.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/4021a3b9-f782-438b-aeb4-c008109a8b64.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/669f79ed-002c-4ff6-965c-9da453968504.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/d17bc040-9e8b-4397-8356-8153f4a64edf.svg#d17bc040-9e8b-4397-8356-8153f4a64edf\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W02-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/e4bd4516-4480-43df-aa6e-4e9b9029f53e.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/e4bd4516-4480-43df-aa6e-4e9b9029f53e.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/b56b944e-bbe0-4450-a241-de2125d3e682.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/7da02f05-ae8b-43a1-aeb9-83b3c0527c06.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/66cac56e-d017-4544-9d0c-f7d978f0c5c2.svg#66cac56e-d017-4544-9d0c-f7d978f0c5c2\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-LT-W10-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/686a6a06-e711-4bd2-b393-8504a497bb3c.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/686a6a06-e711-4bd2-b393-8504a497bb3c.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/6f8d1983-4d34-4fa4-9110-988f6c495757.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/7903ee3f-e9ab-4bdc-b7d2-d232de2da580.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9c58e9ea-fdea-4b9c-b0f9-0a2157389ed0.svg#9c58e9ea-fdea-4b9c-b0f9-0a2157389ed0\") format(\"svg\");\n}\n@font-face {\n  font-family: \"wf_b9cf1341b9ec4945852ac0f86\";\n  src: url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/woff2/file.woff2\") format(\"woff2\"),\n    url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/woff/file.woff\") format(\"woff\"),\n    url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/ttf/file.ttf\") format(\"ttf\");\n}\n@font-face {\n  font-family: \"wf_e4b1e1e4405343d9ad0296011\";\n  src: url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/woff2/file.woff2\") format(\"woff2\"),\n    url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/woff/file.woff\") format(\"woff\"),\n    url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/ttf/file.ttf\") format(\"ttf\");\n}\n\n@font-face {\n  font-display: block;\n  font-family: \"Lulo-Clean-W01-One-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0163ac22-50a7-406e-aa64-c62ee6fbf3d7.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0163ac22-50a7-406e-aa64-c62ee6fbf3d7.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/aee74cb3-c913-4b54-9722-6001c92325f2.woff2\") format(\"woff2\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/80de9d5d-ab5f-40ce-911b-104e51e93d7c.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/1b46b05b-cfdd-4d82-8c2f-5c6cfba1fe60.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/be340f0b-a2d4-41df-acb1-4dc124330a88.svg#be340f0b-a2d4-41df-acb1-4dc124330a88\") format(\"svg\");\n}\n@font-face {\n  font-family: \"Lulo-Clean-W05-One-Bold\";\n  src: url(\"//static.parastorage.com/services/santa-resources/resources/viewer/user-site-fonts/fonts/Lulo_Clean/v1/LuloCleanW05-OneBold.woff2\") format(\"woff2\"),\n    url(\"//static.parastorage.com/services/santa-resources/resources/viewer/user-site-fonts/fonts/Lulo_Clean/v1/LuloCleanW05-OneBold.woff\") format(\"woff\");\n}\n        `}\n  />\n)\n\nexport default Fonts;\n","import {\n    extendTheme,\n    theme as base,\n} from '@chakra-ui/react'\n\nconst theme = extendTheme({\n    fonts: {\n\n        body: `Helvetica-W01-Bold, Helvetica-W02-Bold, Helvetica-LT-W10-Bold, DIN-Next-W01-Light, DIN-Next-W02-Light, DIN-Next-W10-Light, Helvetica-W01-Roman, Helvetica-W02-Roman, Helvetica-LT-W10-Roman, wf_b9cf1341b9ec4945852ac0f86, wf_e4b1e1e4405343d9ad0296011, Lulo-Clean-W01-One-Bold, Lulo-Clean-W05-One-Bold, ${base.fonts?.body}`,\n    },\n})\n\nexport default theme","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Fonts from './components/fonts';\nimport theme from './components/theme';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport {\n  Provider\n} from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <StrictMode>\n      <ChakraProvider theme={theme} >\n        <Fonts />\n        <ColorModeScript initialColorMode=\"dark\" />\n        <App />\n      </ChakraProvider>\n    </StrictMode>\n  </Provider>,\n  document.getElementById('dapp_minter')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}